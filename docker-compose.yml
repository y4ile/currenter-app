services:
  # Сервис для бэкенда
  backend:
    build:
      context: ./backend
      dockerfile: Currenter.Api/Dockerfile
    ports:
      - "7001:8080"
    environment:
      #- ASPNETCORE_ENVIRONMENT=Development # Для запуска с Dev параметрами
      # Строка подключения теперь указывает на сервис mssql
      - ConnectionStrings__DefaultConnection=Server=mssql;Database=CurrenterDb;User Id=sa;Password=${MSSQL_SA_PASSWORD};TrustServerCertificate=True
      - Jwt__Key=${JWT_KEY} # Передаем JWT ключ
      - ExternalApis__ExchangeRateApi__ApiKey=${EXCHANGERATE_API_KEY} # Передаем API ключ
    depends_on:
      mssql:
        condition: service_healthy
      redis:
        condition: service_started

  # Сервис для фронтенда
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80" # Маппим порт 80 контейнера на 8080 хоста
    depends_on:
      backend:
        condition: service_started
  # Сервис для базы данных MSSQL
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: currenter-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "${MSSQL_SA_PASSWORD}" -C -Q "SELECT 1"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
  # Сервис для кэша Redis
  redis:
    image: redis:alpine
    container_name: currenter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  mssql-data:
  redis-data: